{
  "$schema": "http://json-schema.org/draft-07/schema",
  "description": "This is JustFunc, just a functional programming language",
  "$id": "JustFunc",
  "oneOf": [
    {
      "$ref": "#/definitions/JustFunctions"
    },
    {
      "$ref": "#/definitions/JustLiteral"
    }
  ],
  "definitions": {
    "JustFunctions": {
      "oneOf": [
        {
          "$ref": "#/definitions/JustNot"
        },
        {
          "$ref": "#/definitions/JustRetrieve"
        },
        {
          "$ref": "#/definitions/JustEquality"
        },
        {
          "$ref": "#/definitions/JustBinaryFunctions"
        },
        {
          "$ref": "#/definitions/JustTernaryFunctions"
        },
        {
          "$ref": "#/definitions/JustVariadicFunctions"
        }
      ]
    },
    "JustNot": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "const": "not",
          "description": "logical not function: not(true) -> false"
        },
        {
          "$ref": "#"
        }
      ],
      "additionalItems": false
    },
    "JustRetrieve": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "const": "ret",
          "$comment": "todo: ret vs eval, when to return string vs variable value",
          "description": "retrieve value defined by `let`: [let, x, 3, [ret, x]] -> 3"
        },
        {
          "$ref": "#"
        }
      ],
      "additionalItems": false
    },
    "JustEquality": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "const": "==",
          "description": "equality comparison"
        },
        {
          "$ref": "#"
        },
        {
          "$ref": "#"
        }
      ],
      "additionalItems": false
    },
    "JustBinaryFunctions": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "enum": [
            "<",
            ">",
            "<=",
            ">="
          ],
          "description": "Basic binary functions"
        },
        {
          "$ref": "#"
        },
        {
          "$ref": "#"
        }
      ],
      "additionalItems": false
    },
    "JustTernaryFunctions": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "enum": [
            "let",
            "if"
          ],
          "description": "Basic ternary functions:\nlet: declare local variable\nif: if statement"
        },
        {
          "$ref": "#"
        },
        {
          "$ref": "#"
        },
        {
          "$ref": "#"
        }
      ],
      "additionalItems": false
    },
    "JustVariadicFunctions": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "description": "Basic variadic functions: and, or, str, list",
          "enum": [
            "or",
            "and",
            "str",
            "list"
          ]
        }
      ],
      "additionalItems": {
        "$ref": "#"
      }
    },
    "JustLiteral": {
      "type": [
        "boolean",
        "integer",
        "number",
        "string"
      ]
    }
  }
}
